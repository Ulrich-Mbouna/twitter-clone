import Head from 'next/head'
import Sidebar from '../../components/Sidebar'

import Widgets from '../../components/Widgets';
import Post from '../../components/Post';
import CommentModal from '../../components/CommentModal';
import {ArrowLeftIcon} from "@heroicons/react/outline";
import {useRouter} from "next/router";
import {useEffect, useState} from "react";
import Comment from "../../components/Comment";
import {collection, doc, onSnapshot, orderBy, query} from "firebase/firestore";
import {db} from "../../firebase";
import {AnimatePresence, motion} from "framer-motion";

export default function PostDetail({ newsResults, randomUsersResults }) {
    const router = useRouter();
    const { id } = router.query;
    const [post, setPost ] = useState();
    const [comments, setComments ] = useState([]);

    useEffect(() => onSnapshot(doc(db, 'posts', id), (snapshot) => setPost(snapshot)));

    //Get comments of the post
    useEffect(() => {
        onSnapshot(
            query(
                collection(db, 'posts', id, "comments"),
                orderBy('timestamp', 'desc'))
            ,
            (snapshot) => setComments(snapshot.docs));
    }, [db,id])
    

    return ( <
            div >
            <Head>
                <title >Post Page </title>
                <meta name = "description"
                      content = "Generated by create next app" />
                <link rel = "icon"
                      href = "/favicon.ico" />
            </Head>

            <main className='flex min-h-screen mx-auto '>
                {
                    /* Sidebar */ }
                <Sidebar />

                { /* Feed */ }
                <div className="xl:ml-[370px] border-x border-gray-200 xl:min-w-[576px] sm:ml-[73px] grow max-w-xl">
                    <div className="flex items-center space-x-2 py-2 px-3 sticky top-0 z-50 bg-white border-b border-gray-200">
                        <div className="hoverEffect flex items-center justify-center">
                            <ArrowLeftIcon className="h-5" onClick={() => router.push('/')}  />
                        </div>
                        <h2 className="text-lg sm:text-xl font-bold cursor-pointer"> Tweet </h2>
                    </div>
                    <Post id={ id } post={post} />
                    <AnimatePresence>
                    { comments.length > 0 && (
                        <div>
                            {
                                comments.map((comment) => (
                                    <motion.div
                                        key={comment.id}
                                        initial={{opacity: 0}}
                                        animate={{opacity:1}}
                                        exit={{opacity:0}}
                                        transition={{ duration: 1}}
                                    >
                                        <Comment key={comment.id} commentId={comment.id}
                                                 originalPostId={ id}
                                                 comment={comment.data()} />
                                    </motion.div>
                                ))
                            }
                        </div>
                    )}
                    </AnimatePresence>
                </div>

                {
                    /* Widgets */ }
                <Widgets newsResults={ newsResults.articles } randomUsersResults={ randomUsersResults.results } />

                {
                    /* Modals */ }
                <CommentModal />
            </main>


        </div >
    )
}
//https://saurav.tech/NewsAPI/top-headlines/category/business/fr.json

export async function getServerSideProps() {
    const newsResults = await fetch('https://saurav.tech/NewsAPI/top-headlines/category/business/fr.json')
        .then((res) => res.json());

    //Who to follow section
    const randomUsersResults = await fetch('https://randomuser.me/api/?results=6&inc=name,login,picture')
        .then((res) => res.json());

    return {
        props: {
            newsResults,
            randomUsersResults
        }
    }
}